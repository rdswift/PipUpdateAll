#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#################################################################################
#                                                                               #
#   PipUpdateAll - Automatically upgrades all outdated packages using pip       #
#   Copyright (C) 2019 Bob Swift (rdswift)                                      #
#                                                                               #
#   This program is free software: you can redistribute it and/or modify it     #
#   under the terms of the GNU General Public License as published by the       #
#   Free Software Foundation, either version 3 of the License, or (at your      #
#   option) any later version.                                                  #
#                                                                               #
#   This program is distributed in the hope that it will be useful, but         #
#   WITHOUT ANY WARRANTY; without even the implied warranty of                  #
#   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU           #
#   General Public License for more details.                                    #
#                                                                               #
#   You should have received a copy of the GNU General Public License along     #
#   with this program.  If not, see <https://www.gnu.org/licenses/>.            #
#                                                                               #
#################################################################################
"""
Python script used to automatically upgrade all outdated packages using pip.
"""

import os
import subprocess

SCRIPT_NAME = 'PipUpdateAll'
SCRIPT_VERS = '1.00'
SCRIPT_COPYRIGHT = '2019'
SCRIPT_AUTHOR = 'Bob Swift'
SCRIPT_LICENSE = 'GPLv3'

##############################################################################


def main():
    """Main module performing the upgrades
    """
    print('\nReading the package index.')
    response = subprocess.run(['pip', 'list', '--outdated'], stdout=subprocess.PIPE, check=False).stdout.decode('utf-8')

    if response:
        lines = response.split(os.linesep)
        count = 0
        for line in lines:
            count += 1
            if line and count > 2:
                pkg = str(line.split()[0])
                print('\nUpdating: {0}'.format(pkg,))
                subprocess.run(['pip', 'install', pkg, '--upgrade'], check=False)
    else:
        print('\nThere are no packages that require updating.\n')

##############################################################################


if __name__ == "__main__":
    # execute only if run as a script
    main()
